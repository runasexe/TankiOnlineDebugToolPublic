{"version":3,"file":"static-production.e29e3a2c.bundle.js","mappings":"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","sources":["webpack://tankionlinedebugtool/./config/debug.js","webpack://tankionlinedebugtool/./config/moduleConnection.js","webpack://tankionlinedebugtool/./config/project.js","webpack://tankionlinedebugtool/./src/core/coreUtils.js","webpack://tankionlinedebugtool/./src/core/entry-production.js","webpack://tankionlinedebugtool/./src/core/entry.js","webpack://tankionlinedebugtool/./src/core/units/coreLauncher.js","webpack://tankionlinedebugtool/./src/core/units/coreLauncherBrowser.js","webpack://tankionlinedebugtool/./src/core/units/coreLauncherNodeJS.js","webpack://tankionlinedebugtool/./src/core/units/event.js","webpack://tankionlinedebugtool/./src/core/units/i18n.js","webpack://tankionlinedebugtool/./src/core/units/logger.js","webpack://tankionlinedebugtool/./src/core/units/moduleListener.js","webpack://tankionlinedebugtool/./src/core/units/moduleManager.js","webpack://tankionlinedebugtool/./src/modules/libHelper/entry-production.js","webpack://tankionlinedebugtool/./src/modules/libHelper/entry.js","webpack://tankionlinedebugtool/./src/modules/libHelper/units/functionHelper.js","webpack://tankionlinedebugtool/./src/modules/libHelper/units/linkHelper.js","webpack://tankionlinedebugtool/./src/modules/libHelper/units/objectHelper.js","webpack://tankionlinedebugtool/./src/modules/libHelper/units/stringHelper.js","webpack://tankionlinedebugtool/./src/modules/libWebpack/entry-production.js","webpack://tankionlinedebugtool/./src/modules/libWebpack/entry.js","webpack://tankionlinedebugtool/./src/modules/libWebpack/units/advancedWebpackModuleManager.js","webpack://tankionlinedebugtool/./src/modules/libWebpack/units/webpackModuleManager.js","webpack://tankionlinedebugtool/./src/modules/tankionlineHooks/entry-production.js","webpack://tankionlinedebugtool/./src/modules/tankionlineHooks/entry.js","webpack://tankionlinedebugtool/./src/modules/tankionlineHooks/units/hookManager.js","webpack://tankionlinedebugtool/./src/modules/tankionlineHooks/units/hooks/battleMessagesHook.js","webpack://tankionlinedebugtool/./src/modules/tankionlineLoader/config.js","webpack://tankionlinedebugtool/./src/modules/tankionlineLoader/entry-production.js","webpack://tankionlinedebugtool/./src/modules/tankionlineLoader/entry.js","webpack://tankionlinedebugtool/./src/modules/tankionlineLoader/units/gameLoader.js","webpack://tankionlinedebugtool/./src/modules/tankionlineLoader/units/gameScriptLoader.js","webpack://tankionlinedebugtool/./src/modules/tankionlineWebpack/entry-production.js","webpack://tankionlinedebugtool/./src/modules/tankionlineWebpack/entry.js","webpack://tankionlinedebugtool/./src/modules/tankionlineWebpack/units/webpackStorage.js","webpack://tankionlinedebugtool/./src/utils/context.js","webpack://tankionlinedebugtool/./src/utils/features.js","webpack://tankionlinedebugtool/./src/utils/module.js","webpack://tankionlinedebugtool/webpack/bootstrap","webpack://tankionlinedebugtool/webpack/startup"],"sourcesContent":["module.exports = {\r\n    debugName: 'tankiOnlineDebug',\r\n    styleLoggerProject: 'color: blue;',\r\n    styleLoggerModule: 'color: green;'\r\n};\r\n\r\n","module.exports = {\r\n    moduleListenerName: 'tankiOnlineDebugModuleListener'\r\n};\r\n\r\n","module.exports = {\r\n    projectName: 'Tanki Online Debug'\r\n};\r\n\r\n","/**\r\n * В этот файл вынесены инструменты сборки ядра\r\n */\r\nconst { Module } = require('./units/moduleManager');\r\n\r\n/**\r\n * Функция создания содуля ядра\r\n * \r\n * @function\r\n * \r\n * @param {*} callback - Функция, вызываемая после создания пустого модуля ядра\r\n * @returns\r\n */\r\nconst moduleCreateCore = ((...args) => {\r\n    // Создание модуля ядра\r\n    const coreContext = new Module('core', {\r\n        // Метка модуля как загруженного, для предотвращения инициализации\r\n        loaded: true,\r\n        // Информация о модуле\r\n        info: {\r\n            versionProduction: null,\r\n            versionDevelopment: null\r\n        }\r\n    });\r\n    // При импорте модуля будет возвращен объект модуля\r\n    coreContext.exports = coreContext;\r\n    \r\n    // Специальные метки объекта\r\n    Object.defineProperty(coreContext, '__isCore', {writable: false, value: true});\r\n    Object.defineProperty(coreContext, '__isModule', {writable: false, value: true});\r\n    Object.defineProperty(coreContext, '__dataType', {writable: false, value: 'Module'});\r\n    \r\n    // Вызов функции инициализации после создания модуля ядра\r\n    args.map(callback => callback.call(coreContext, coreContext, coreContext));\r\n\r\n    // Возврат модуля ядра\r\n    return coreContext;\r\n});\r\n\r\nmodule.exports = { moduleCreateCore };\r\n\r\n","const coreContext = require('./entry');\r\n\r\ncoreContext.info.versionProduction = true;\r\nmodule.exports = coreContext;\r\n\r\n","/**\r\n * Этот файл отвечает за сборку ядра\r\n */\r\n\r\n// Основные процедуры вынесены в отдельный файл \"./coreUtils\"\r\nconst { moduleCreateCore } = require('./coreUtils');\r\nconst { defaultModuleCreateSignals } = require('/src/utils/module')\r\n\r\n// Сборка модуля ядра\r\nmodule.exports = moduleCreateCore(((coreContext) => {\r\n    // Мета-информация о модуле\r\n    coreContext.info.name = 'Tanki Online: Core';\r\n    coreContext.info.version = '1.0.1';\r\n    coreContext.info.versionAlpha = true;\r\n    coreContext.info.versionBeta = false;\r\n\r\n    // Импорт компонентов ядра:\r\n    // > Подсистема отладки:\r\n    coreContext.units.register(require('./units/logger'));\r\n    // > Подсистема обработки событий:\r\n    coreContext.units.register(require('./units/event'));\r\n    // > Подсистема менеджмента модулей:\r\n    coreContext.units.register(require('./units/moduleManager'));\r\n    // > Подсистема регистрации модулей:\r\n    coreContext.units.register(require('./units/moduleListener'));\r\n    // > Подсистема локализации:\r\n    coreContext.units.register(require('./units/i18n'));\r\n    // > Лаунчер ядра:\r\n    coreContext.units.register(require('./units/coreLauncher'));\r\n    // > Лаунчер ядра для браузера:\r\n    coreContext.units.register(require('./units/coreLauncherBrowser'));\r\n    // > Лаунчер ядра для браузера:\r\n    coreContext.units.register(require('./units/coreLauncherNodeJS'));\r\n}), defaultModuleCreateSignals);\r\n\r\n","/**\r\n * Этот модуль содержит процедуру запуска.\r\n * В зависимости от вида интерпретатора нвызывает функцию запуска ядл этого интерпетатора\r\n */\r\n\r\nconst { getInterpreterType } = require('/src/utils/context');\r\n\r\nconst unitSignals = {\r\n    application: ((coreContext) => {\r\n        coreContext.units.signal('application' + getInterpreterType());\r\n        coreContext.units.destroy();\r\n    }),\r\n    applicationUnknown: ((coreContext) => {\r\n        coreContext.logger.error(\"Can't actions to run: Unknown interpreter\");\r\n    })\r\n};\r\n\r\nmodule.exports = { unitSignals };\r\n\r\n","/**\r\n * Этот модуль содержит процедуру запуска для браузера.\r\n */\r\n\r\nconst { globalContext } = require('/src/utils/context');\r\nconst { CoreEvent } = require('./event');\r\n\r\n// Событие при остановке прослушивания модулей\r\nclass ModuleListenerStopEvent extends CoreEvent {\r\n    constructor() {\r\n        super(\"moduleListenerStop\", {cancelable: true});\r\n    }\r\n};\r\nModuleListenerStopEvent.eventType = \"core.moduleListenerStop\";\r\n\r\nconst unitSignals = {\r\n    applicationBrowser: ((coreContext) => {\r\n        coreContext.units.signal('applicationPrev');\r\n        // Вызываем эту функцию при загрузке документа\r\n        const loadProc = (async () => {\r\n            // Отправка сигналов загруженным модулям\r\n            await coreContext.modules.signals.signalModulesLoad(coreContext);\r\n            \r\n            // Остановка регистратора модулей\r\n            if(coreContext.event.dispatchEvent(new coreContext.ModuleListenerStopEvent())) {\r\n                coreContext.moduleListener.listenStop();\r\n            }\r\n\r\n            // Вызываем сигнал applicationPost - документ загружен\r\n            coreContext.units.signal('applicationPost');\r\n        });\r\n        // Если мы можем определить событие загрузки документа\r\n        if(globalContext instanceof EventTarget) {\r\n            if((globalContext.document) && (globalContext.document.readyState) && (globalContext.document.readyState == 'complete')) {\r\n                loadProc();\r\n            } else {\r\n                globalContext.addEventListener(\"load\", loadProc);\r\n            }\r\n        } else {\r\n            // Иначе вызываем loadProc - документ загружен\r\n            loadProc();\r\n        }\r\n    })\r\n};\r\n\r\nmodule.exports = {\r\n    ModuleListenerStopEvent,\r\n    unitSignals\r\n};\r\n\r\n","/**\r\n * Этот модуль содержит процедуру запуска для NodeJS.\r\n */\r\n\r\nconst { consoleContext } = require('/src/utils/context');\r\n\r\nconst unitSignals = {\r\n    applicationNodeJS: ((coreContext) => {\r\n        coreContext.logger.error(\"Can't actions to run in NodeJS\");\r\n    })\r\n};\r\n\r\nmodule.exports = { unitSignals };\r\n\r\n","/**\r\n * Этот модуль содержит инструменты для определения и вызова событий.\r\n */\r\n\r\nconst { consoleContext } = require('/src/utils/context');\r\n\r\n// Менеджер событий\r\nclass EventManager extends EventTarget {};\r\n\r\n// Событие. Аналог CustomEvent, который может быть не определен\r\nclass GlobalEvent extends Event {\r\n    detail = null;\r\n    constructor(eventName, eventInitDict) {\r\n        let detail = null;\r\n        if(eventInitDict && eventInitDict.detail) {\r\n            detail = eventInitDict.detail;\r\n            delete eventInitDict.detail;\r\n        }\r\n        super(eventName, eventInitDict);\r\n        this.detail = detail;\r\n    }\r\n};\r\n\r\n// Событие модуля\r\nclass ModuleEvent extends GlobalEvent {\r\n    module = null;\r\n    constructor(module, eventName, eventInitDict) {\r\n        if(!module || !module.id) {\r\n            consoleContext.error('Send ModuleEvent with empty module:', module);\r\n            super(\"NoModuleEvent\", eventInitDict);\r\n            this.eventName = eventName;\r\n        } else {\r\n            super(module.id + \".\" + eventName, eventInitDict);\r\n        }\r\n        this.module = module;\r\n    }\r\n};\r\n\r\n// Событие ядра\r\nclass CoreEvent extends ModuleEvent {\r\n    constructor(eventName, eventInitDict) {\r\n        super(CoreEvent.coreContext, eventName, eventInitDict);\r\n    }\r\n};\r\n\r\nconst unitSignals = {\r\n    init: ((coreContext) => {\r\n        CoreEvent.coreContext = coreContext;\r\n        coreContext.event = new coreContext.EventManager();\r\n    })\r\n};\r\n\r\nmodule.exports = {\r\n    EventManager,\r\n    GlobalEvent,\r\n    ModuleEvent,\r\n    CoreEvent,\r\n    unitSignals\r\n};\r\n\r\n","const { getValue } = require('/src/utils/context');\r\nconst defaultLangMutate = require('/config/defaultLocalizationMutate.json');\r\n\r\n// TODO: Идет разработка транслятора\r\n//  В планах, перевести на них все сообщения ядра (а затем и модулей, с индивидуальными трансляторами)\r\n\r\nclass Translator {\r\n    languareData = null;\r\n    languareCurrent = null;\r\n    languareMutations = null;\r\n\r\n    constructor(languare) {\r\n        this.languareData = {};\r\n        this.languareMutations = {};\r\n        this.languareCurrent = (languare || (e => (e ? e.language : null))(getValue('navigator')) || 'default');\r\n    }\r\n\r\n    import(content) {\r\n        let scanState = null;\r\n        let currentData = null;\r\n        for(let currentLanguare in content) {\r\n            scanState = true;\r\n            currentData = content[currentLanguare];\r\n            while(scanState) {\r\n                scanState = false;\r\n                for(let keyName in currentData) {\r\n                    if((typeof(currentData[keyName]) == 'string') || (typeof(currentData[keyName]) == 'number')) {\r\n                        currentData[keyName.toLocaleLowerCase()] = currentData[keyName];\r\n                        delete currentData[keyName];\r\n                    } else if((typeof(currentData[keyName]) == 'object') && (currentData[keyName] !== null)) {\r\n                        scanState = true;\r\n                        for(let keyNameSecond in currentData[keyName]) {\r\n                            currentData[keyName.toLocaleLowerCase() + '.' + keyNameSecond.toLocaleLowerCase()] = currentData[keyName][keyNameSecond];\r\n                            delete currentData[keyName][keyNameSecond];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.languareData[currentLanguare] = (this.languareData[currentLanguare] || {});\r\n            Object.assign(this.languareData[currentLanguare], currentData);\r\n        }\r\n    }\r\n\r\n    mutate(mutateDictionary) {\r\n        Object.assign(this.languareMutations, mutateDictionary);\r\n        this.languare = this.languare\r\n    }\r\n\r\n    mutateUpdate(languare) {\r\n        languare = (languare || this.languareCurrent);\r\n        while(languare in this.languareMutations) {\r\n            languare = this.languareMutations[languare];\r\n        }\r\n        this.languareCurrent = languare;\r\n    }\r\n\r\n    get languare() {\r\n        return this.languareCurrent;\r\n    }\r\n\r\n    set languare(value) {\r\n        this.mutateUpdate(value);\r\n    }\r\n\r\n    get(name) {\r\n        this.languareData[this.languareCurrent] = (this.languareData[this.languareCurrent] || {});\r\n        return (this.languareData[this.languareCurrent][name] || null);\r\n    }\r\n\r\n    set(name, value) {\r\n        this.languareData[this.languareCurrent] = (this.languareData[this.languareCurrent] || {});\r\n        this.languareData[this.languareCurrent][name] = value;\r\n    }\r\n};\r\n\r\nconst unitSignals = {\r\n    init: ((coreContext) => {\r\n        coreContext.i18n = new coreContext.Translator();\r\n    }),\r\n    load: ((coreContext) => {\r\n        coreContext.i18n.mutate(defaultLangMutate);\r\n        coreContext.i18n.mutateUpdate();\r\n    })\r\n};\r\n\r\nmodule.exports = { Translator, unitSignals };\r\n\r\n","/**\r\n * Этот модуль содержит базовые инструменты для логирования и передачи параметров в консоль\r\n * \r\n * Notice:\r\n * Информация:\r\n *  Используйте отдельный модуль для переопределения любого из указанных классов\r\n */\r\n\r\nconst { projectName } = require('/config/project');\r\nconst { styleLoggerProject, styleLoggerModule } = require('/config/debug');\r\nconst { consoleContext } = require('/src/utils/context');\r\n\r\n/**\r\n * Класс для вывода информации в консоль браузера\r\n * Выводит информацию с сохранением пользовательского форматирования, предваряя ее заранее указанной информацией с указанным стилем\r\n */\r\nclass LoggerBrowser {\r\n    outData = null;\r\n    console = null;\r\n    outStyle = null;\r\n\r\n    /**\r\n     * Конструктор\r\n     * \r\n     * @param {string} outData - Информация для вывода в консоль, предваряя пользоватльские параметры\r\n     * @param {Console} consoleObject - Оригинальный объект, предоставляемый API интерпретатора\r\n     * @param {string} outStyle - Стиль для вывода информации, указанной в outData\r\n     */\r\n    constructor(outData, consoleObject, style) {\r\n        this.outData = (outData || null);\r\n        this.console = (consoleObject || consoleContext || null);\r\n        this.outStyle = (style || null);\r\n\r\n        let propertyInfo = {};\r\n\r\n        Object.getOwnPropertyNames(this.console)\r\n            .filter((propertyName => (typeof(this.console[propertyName]) == 'function')), this)\r\n            .map(((functionName) => {\r\n                let propertyData = propertyInfo[functionName] = {\r\n                    writable: false,\r\n                };\r\n                if (['log', 'info', 'warn', 'error'].indexOf(functionName) != (-1)) {\r\n                    propertyData.value = ((...args) => {\r\n                        let formatedArgs = args;\r\n                        if(this.outData && formatedArgs.length) {\r\n                            if(typeof(formatedArgs[0]) == 'string') {\r\n                                formatedArgs = [\"%c[\" + this.outData + \"]%c \" + formatedArgs[0], this.outStyle, null].concat(formatedArgs.slice(1));\r\n                            } else {\r\n                                formatedArgs = [\"%c[\" + this.outData + \"]%c\", this.outStyle, null].concat(formatedArgs);\r\n                            }\r\n                        }\r\n                        this.console[functionName].apply(this.console, formatedArgs);\r\n                    }).bind(this);\r\n                } else {\r\n                    propertyData.value = ((...args) => {\r\n                        this.console[functionName].apply(this.console, args);\r\n                    }).bind(this);\r\n                }\r\n            }), this);\r\n        Object.defineProperties(this, propertyInfo);\r\n    }\r\n};\r\n\r\n\r\nconst unitSignals = {\r\n    // Инициализация компонентов ядра\r\n    init: ((coreContext) => {\r\n        coreContext.logger = new coreContext.LoggerBrowser(projectName, null, styleLoggerProject);\r\n    }),\r\n    // Загрузка базовых параметров ядра\r\n    event: ((coreContext) => {\r\n        // Прослушиватель событий при импорте модуля\r\n        // Добавляет свойство \"logger\" модуля с указанием ID модуля и стилем\r\n        coreContext.event.addEventListener(coreContext.ModuleImportEvent.eventType, ((event) => {\r\n            let module = (event.module || null);\r\n\r\n            if(!module) {\r\n                return;\r\n            }\r\n\r\n            module.logger = new coreContext.LoggerBrowser(module.id, coreContext.logger, styleLoggerModule);\r\n        }));\r\n    })\r\n};\r\n\r\nmodule.exports = { LoggerBrowser, unitSignals };\r\n\r\n","const { connectContext, globalContext } = require('/src/utils/context');\r\nconst { Module } = require('./moduleManager');\r\nconst { moduleListenerName } = require('/config/moduleConnection');\r\nconst { GlobalEvent, CoreEvent } = require('./event');\r\nconst { sharedCore } = require('/src/utils/features');\r\n\r\nclass ListenerRecvEvent extends CoreEvent {\r\n    recv = null;\r\n    recvPrevious = null;\r\n\r\n    constructor(recv, recvPrevious) {\r\n        super(\"ModuleListener.recv\", {cancelable: true});\r\n        this.recv = (recv || null);\r\n        this.recvPrevious = (recvPrevious || null);\r\n    }\r\n};\r\nListenerRecvEvent.eventType = \"core.ModuleListener.recv\";\r\n\r\nclass ListenerRecvModuleEvent extends CoreEvent {\r\n    module = null;\r\n    recvPrevious = null;\r\n\r\n    constructor(module, recvPrevious) {\r\n        super(\"ModuleListener.recvModule\", {cancelable: true});\r\n        this.module = (module || null);\r\n        this.recvPrevious = (recvPrevious || null);\r\n    }\r\n};\r\nListenerRecvModuleEvent.eventType = \"core.ModuleListener.recvModule\";\r\n\r\nclass ListenerRecvModuleTemplateEvent extends CoreEvent {\r\n    moduleTemplate = null;\r\n    recvPrevious = null;\r\n\r\n    constructor(moduleTemplate, recvPrevious) {\r\n        super(\"ModuleListener.recvModuleTemplate\", {cancelable: true});\r\n        this.moduleTemplate = (moduleTemplate || null);\r\n        this.recvPrevious = (recvPrevious || null);\r\n    }\r\n};\r\nListenerRecvModuleTemplateEvent.eventType = \"core.ModuleListener.recvModuleTemplate\";\r\n\r\nclass ListenerRecvDataEvent extends CoreEvent {\r\n    data = null;\r\n    recvPrevious = null;\r\n\r\n    constructor(data, recvPrevious) {\r\n        super(\"ModuleListener.recvData\", {cancelable: true});\r\n        this.data = (data || null);\r\n        this.recvPrevious = (recvPrevious || null);\r\n    }\r\n};\r\nListenerRecvDataEvent.eventType = \"core.ModuleListener.recvData\";\r\n\r\nclass ListenerProcessModuleEvent extends CoreEvent {\r\n    module = null;\r\n    recvPrevious = null;\r\n\r\n    constructor(module, recvPrevious) {\r\n        super(\"ModuleListener.processModule\", {cancelable: true});\r\n        this.module = (module || null);\r\n        this.recvPrevious = (recvPrevious || null);\r\n    }\r\n};\r\nListenerProcessModuleEvent.eventType = \"core.ModuleListener.processModule\";\r\n\r\n// Специальное событие для передачи в модуль, который был загружен раньше\r\nclass ListenerModuleRequestEvent extends GlobalEvent {\r\n    constructor(listenerName, callback) {\r\n        super(listenerName + \"ModuleRequest\", {cancelable: true});\r\n        this.registerCallback = callback;\r\n    }\r\n};\r\n\r\n// Событие при импорте модуля\r\nclass ModuleImportEvent extends CoreEvent {\r\n    module = null;\r\n    constructor(module) {\r\n        super(\"moduleImport\", {cancelable: true});\r\n        this.module = module;\r\n    }\r\n};\r\nModuleImportEvent.eventType = \"core.moduleImport\";\r\n// СОбытие при вызове сигналов модуля\r\nclass ProcessModuleImportEvent extends CoreEvent {\r\n    module = null;\r\n    constructor(module) {\r\n        super(\"signalModuleImport\", {cancelable: true});\r\n        this.module = module;\r\n    }\r\n};\r\nProcessModuleImportEvent.eventType = \"core.signalModuleImport\";\r\n\r\n/**\r\n * Абстрактный регистратор модулей\r\n */\r\nclass ModuleListener extends EventTarget {\r\n    coreContext = null;\r\n\r\n    constructor(coreContext) {\r\n        super();\r\n        this.coreContext = coreContext;\r\n    }\r\n    \r\n\r\n    /**\r\n     * Запуск загрузчика модулей\r\n     */\r\n    listenStart() {}\r\n\r\n    /**\r\n     * Остановка загрузчика модулей\r\n     */\r\n    listenStop() {}\r\n\r\n    callRecvObject(recvData) {\r\n        if(this.dispatchEvent(new ListenerRecvEvent(recvData, null))) {\r\n            this.onRecvDefault(recvData, null);\r\n        }\r\n    }\r\n\r\n    onRecvDefault(data, recvPrevious) {\r\n        if(!data) {\r\n            return;\r\n        }\r\n\r\n        if((data.__isModuleTemplate) || (data.__dataType == 'ModuleTemplate')) {\r\n            if(this.dispatchEvent(new ListenerRecvModuleTemplateEvent(data, recvPrevious))) {\r\n                this.onRecvModuleTemplateDefault(data, recvPrevious);\r\n            }\r\n        } else if((data.__isModule) || (data.__dataType == 'Module')) {\r\n            if(this.dispatchEvent(new ListenerRecvModuleEvent(data, recvPrevious))) {\r\n                this.onRecvModuleDefault(data, recvPrevious);\r\n            }\r\n        } else {\r\n            if(this.dispatchEvent(new ListenerRecvDataEvent(data, recvPrevious))) {\r\n                this.onRecvDataDefault(data, recvPrevious);\r\n            }\r\n        }\r\n    }\r\n    onRecvModuleTemplateDefault(moduleTemplate, recvPrevious) {\r\n        if(!moduleTemplate.id) {\r\n            return;\r\n        }\r\n\r\n        let moduleContext = new Module(moduleTemplate.id);\r\n        Object.defineProperty(moduleContext, '__isModule', {writable: false, value: true});\r\n        Object.defineProperty(moduleContext, '__dataType', {writable: false, value: 'Module'});\r\n\r\n        if((moduleTemplate.constructors) && (moduleTemplate.constructors instanceof Array)) {\r\n            moduleTemplate.constructors\r\n                .filter((constructorData) => (typeof(constructorData) == 'function'))\r\n                .map((constructorFunction) => constructorFunction.call(moduleContext, moduleContext, this.coreContext));\r\n        }\r\n        \r\n        this.dispatchEvent(new ListenerProcessModuleEvent(moduleContext, recvPrevious))\r\n    }\r\n    onRecvModuleDefault(module, recvPrevious) {\r\n        this.dispatchEvent(new ListenerProcessModuleEvent(module, recvPrevious))\r\n    }\r\n    onRecvDataDefault(data, recvPrevious) {\r\n\r\n    }\r\n};\r\n/**\r\n * Регистратор модулей на основе событий.\r\n * Предпочтительный регистратор, т.к. нет простого способа обнаружить данный регистратор при рандомизации ключа даже при регистрации на globalThis\r\n */\r\nclass EventModuleListener extends ModuleListener {\r\n    globalObject = null\r\n    listenerName = null\r\n    listenerCallback = null\r\n\r\n    constructor(coreContext, globalObject, listenerName) {\r\n        super(coreContext);\r\n        this.globalObject = (globalObject || null);\r\n        this.listenerName = (listenerName || null);\r\n        this.listenerCallback = null;\r\n    }\r\n    \r\n    listenStart(options) {\r\n        if(this.listenerCallback) {\r\n            return;\r\n        }\r\n\r\n        options = (options || {});\r\n\r\n        this.globalObject.addEventListener(this.listenerName, (this.listenerCallback = ((event) => {\r\n            if('status' in event) {\r\n                event.status = true;\r\n            }\r\n            let data = (event.moduleTemplate || event.transferObject || null);\r\n            if(!data) {\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            if(this.dispatchEvent(new ListenerRecvEvent(data, false))) {\r\n                this.onRecvDefault(data, false);\r\n            }\r\n        })));\r\n        this.globalObject.dispatchEvent(new ListenerModuleRequestEvent(this.listenerName, ((data) => {\r\n            if(this.dispatchEvent(new ListenerRecvEvent(data, true))) {\r\n                this.onRecvDefault(data, true);\r\n            }\r\n        }).bind(this)));\r\n    }\r\n\r\n    listenStop() {\r\n        if(this.listenerCallback) {\r\n            this.globalObject.removeEventListener(this.listenerName, this.listenerCallback);\r\n            this.listenerCallback = null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Регистратор модулей на основе объектов\r\n */\r\nclass ContextModuleListener extends ModuleListener {\r\n    globalObject = null\r\n    listenerName = null\r\n\r\n    constructor(coreContext, globalObject, listenerName) {\r\n        super(coreContext);\r\n        this.globalObject = (globalObject || null);\r\n        this.listenerName = (listenerName || null);\r\n    }\r\n    \r\n    listenStart(options) {\r\n        options = (options || {});\r\n\r\n        if (this.globalObject[this.listenerName]) {\r\n            if ((this.globalObject[this.listenerName]) instanceof Array) {\r\n                this.globalObject[this.listenerName].map(((recvData) => {\r\n                    if(this.dispatchEvent(new ListenerRecvEvent(recvData, true))) {\r\n                        this.onRecvDefault(recvData, true);\r\n                    }\r\n                }), this);\r\n                this.globalObject[this.listenerName] = null;\r\n                delete this.globalObject[this.listenerName];\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        Object.defineProperty(this.globalObject, this.listenerName, {\r\n            enumerable: false,\r\n            configurable: !(options.permanent),\r\n            writable: false,\r\n            value: ((recvData) => {\r\n                if(this.dispatchEvent(new ListenerRecvEvent(recvData, false))) {\r\n                    this.onRecvDefault(recvData, false);\r\n                }\r\n            }).bind(this)\r\n        });\r\n    }\r\n\r\n    listenStop() {\r\n        return (delete this.globalObject[this.listenerName]);\r\n    }\r\n}\r\n/**\r\n * Объединенный файл, используются общие данные\r\n */\r\nclass SharedModuleListener extends ModuleListener {\r\n    constructor(coreContext) {\r\n        super(coreContext);\r\n    }\r\n    \r\n    listenStart(options) {\r\n        sharedCore.coreContext = this.coreContext;\r\n        sharedCore.templateList.map((moduleTemplate) => this.installModuleTemplate(moduleTemplate));\r\n        sharedCore.templateList = null;\r\n    }\r\n\r\n    installModuleTemplate(moduleTemplate) {\r\n        this.callRecvObject(moduleTemplate);\r\n    }\r\n}\r\n/**\r\n * Функция определения регистратора, возвращает проиниализированный регистратор\r\n */\r\nModuleListener.getModuleListener = ((coreContext, listenerName) => {\r\n    if(sharedCore.enabled && (!sharedCore.coreContext)) {\r\n        return new SharedModuleListener(coreContext);\r\n    } else if(connectContext instanceof EventTarget) {\r\n        return new EventModuleListener(coreContext, connectContext, listenerName);\r\n    } else {\r\n        return new ContextModuleListener(coreContext, connectContext, listenerName);\r\n    }\r\n});\r\n\r\nconst unitSignals = {\r\n    // Инициализация компонента взаимодействия с модулями\r\n    init: ((coreContext) => {\r\n        coreContext.moduleListener = coreContext.ModuleListener.getModuleListener(coreContext, moduleListenerName);\r\n    }),\r\n    // Регистрация событий\r\n    event: ((coreContext) => {\r\n        coreContext.moduleListener.addEventListener(coreContext.ListenerProcessModuleEvent.eventType, (async (event) => {\r\n            let module = (event.module || null);\r\n\r\n            if(!module) {\r\n                return;\r\n            }\r\n            \r\n            if(coreContext.event.dispatchEvent(new coreContext.ModuleImportEvent(module))) {\r\n                coreContext.modules.installModule(module);\r\n                if(coreContext.event.dispatchEvent(new coreContext.ProcessModuleImportEvent(module))) {\r\n                    for(var signalId = 0; signalId < coreContext.modules.signals.signalAutoloadList.length; signalId++) {\r\n                        await Promise.all(module.signals.signal(coreContext.modules.signals.signalAutoloadList[signalId], coreContext));\r\n                    }\r\n                    \r\n                }\r\n            }\r\n        }));\r\n    }),\r\n    applicationPrev: ((coreContext) => {\r\n        coreContext.moduleListener.listenStart();\r\n    })\r\n};\r\n\r\nmodule.exports = {\r\n    ModuleListener,\r\n    ContextModuleListener,\r\n    EventModuleListener,\r\n    ListenerRecvEvent,\r\n    ListenerRecvModuleEvent,\r\n    ListenerRecvModuleTemplateEvent,\r\n    ListenerRecvDataEvent,\r\n    ListenerProcessModuleEvent,\r\n    ListenerModuleRequestEvent,\r\n    ModuleImportEvent,\r\n    ProcessModuleImportEvent,\r\n    unitSignals\r\n};","/**\r\n * В этот компонент вынесены инструменты управления с модулями\r\n */\r\n\r\n/**\r\n * Класс исключения ModuleNotFoundError\r\n * Вызывается при ошибку импорта модуля\r\n */\r\nclass ModuleNotFoundError extends Error {\r\n    moduleId = null;\r\n    moduleManager = null;\r\n\r\n    /**\r\n     * Конструктор исключения\r\n     * \r\n     * @param {string} moduleId - Идентификатор модуля, который не был найден\r\n     * @param {ModuleManager} moduleManager - Объект менеджера модулей, вызвавшего исключение\r\n     */\r\n    constructor(moduleId, moduleManager) {\r\n        super('Module \"' + moduleId.toString() + '\" not found in ModuleManager');\r\n        this.moduleId = moduleId || null;\r\n        this.moduleManager = moduleManager || null;\r\n    }\r\n};\r\n\r\n/**\r\n * Обработчик сигналов компонентов модулей.\r\n * Отвечает за регистрацию и обработку сигналов компонентов.\r\n */\r\nclass UnitSignalManager {\r\n    signals = null\r\n    moduleContext = null\r\n\r\n    constructor(moduleContext) {\r\n        this.signals = {};\r\n        this.moduleContext = moduleContext;\r\n    }\r\n\r\n    /**\r\n     * Копирование свойств из импортированного компонента в модуль.\r\n     * Если объявлен элемент \"unitSignals\", данные из него будут обработаны как сигналы.\r\n     * Элемент \"unitSignals\" содержит словарь функций, которые должны быть вызваны на разных этапах загрузки модуля.\r\n     * \r\n     * Warning:\r\n     * Внимание:\r\n     *  Слияние производится при помощи метода \"Object.assign\", вложенные данные будут перезаписаны!\r\n     * \r\n     * @param {Object} unitContent - Объект, содержащий компонент модуля.\r\n     */\r\n    register(unitContent) {\r\n        if(unitContent.unitSignals) {\r\n            for(let signalId in unitContent.unitSignals) {\r\n                this.signals[signalId] = (this.signals[signalId] || []);\r\n                if(unitContent.unitSignals[signalId] instanceof Array) {\r\n                    this.signals[signalId] = this.signals[signalId].concat(\r\n                        unitContent.unitSignals[signalId]\r\n                            .filter(callback => callback)\r\n                            .filter(callback => (typeof(callback) == 'function'))\r\n                    );\r\n                } else if(typeof(unitContent.unitSignals[signalId]) == 'function') {\r\n                    this.signals[signalId].push(unitContent.unitSignals[signalId]);\r\n                }\r\n                \r\n            }\r\n            delete unitContent.unitSignals;\r\n        }\r\n        Object.assign(this.moduleContext, unitContent);\r\n    }\r\n\r\n    /**\r\n     * Осуществляет вызов сигнала для каждого компонента\r\n     * \r\n     * @param {string} signalId - Сигнал\r\n     * @param  {...any} args - Передаваемые аргументы\r\n     * @returns \r\n     */\r\n    signal(signalId, ...args) {\r\n        if(!(signalId in this.signals)) {\r\n            return [];\r\n        }\r\n        const result = this.signals[signalId]\r\n            .filter(unitCallback => (typeof(unitCallback) == 'function'))\r\n            .map(unitCallback => unitCallback.call(this.moduleContext, this.moduleContext, ...args))\r\n            .filter((result) => (result instanceof Promise));\r\n        delete this.signals[signalId];\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Очистка словаря сигналов при загрузке.\r\n     * \r\n     * Эта процедура выполняется, чтобы не перезаписать однажды созданные элементы похожими, для предотвращения различных багов.\r\n     */\r\n    destroy() {\r\n        this.signals = {};\r\n    }\r\n};\r\n\r\n/**\r\n * Обработчик сигналов модулей.\r\n * Отвечает за регистрацию и обработку сигналов модулей.\r\n */\r\nclass ModuleSignalManager {\r\n    signals = null;\r\n    moduleContext = null;\r\n\r\n    constructor(moduleContext) {\r\n        this.signals = {};\r\n        this.moduleContext = moduleContext;\r\n    }\r\n    \r\n    /**\r\n     * Регистрация обработчика сигнала модуля\r\n     * \r\n     * @param {string} signalId - Сигнал\r\n     * @param  {...Function} signalCallbacks - Обработчики сигнала\r\n     */\r\n    register(signalId, ...signalCallbacks) {\r\n        this.signals[signalId] = (this.signals[signalId] || []);\r\n        this.signals[signalId] = this.signals[signalId].concat(\r\n            signalCallbacks\r\n                .filter(callback => callback)\r\n                .filter(callback => (typeof(callback) == 'function'))\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * Вызов сигнала модуля\r\n     * \r\n     * @param {string} signalId - Сигнал\r\n     * @param  {...any} args - Передаваемые аргументы\r\n     * @returns \r\n     */\r\n    signal(signalId, ...args) {\r\n        if(!(signalId in this.signals)) {\r\n            return [];\r\n        }\r\n        const result = this.signals[signalId]\r\n            .filter(signalCallback => (typeof(signalCallback) == 'function'))\r\n            .map(signalCallback => signalCallback.call(this.moduleContext, this.moduleContext, ...args))\r\n            .filter((result) => (result instanceof Promise));\r\n        delete this.signals[signalId];\r\n        return result;\r\n    }\r\n    \r\n    destroy() {\r\n        this.signals = {};\r\n    }\r\n};\r\n\r\n/**\r\n * Обработчик сигналов менеджера модулей.\r\n * Вызывает сигналы модулей обрабатываемого менеджера модулей.\r\n */\r\nclass ModuleManagerSignalManager {\r\n    coreContext = null;\r\n    moduleManager = null;\r\n    signalAutoloadList = null;\r\n\r\n    constructor(coreContext, moduleManager) {\r\n        this.coreContext = coreContext;\r\n        this.moduleManager = moduleManager;\r\n        this.signalAutoloadList = [];\r\n    }\r\n    \r\n    signal(signal, ...args) {\r\n        let resultAwait = [];\r\n        for (const moduleId in this.moduleManager.modules) {\r\n            resultAwait = resultAwait.concat(this.moduleManager.modules[moduleId].signals.signal(signal, ...args));\r\n        }\r\n        return resultAwait;\r\n    }\r\n    \r\n    /**\r\n     * Процедура загрузки модулей\r\n     */\r\n    async signalModulesLoad() {\r\n        // Инициализация модуля\r\n        await Promise.all(this.callModuleSignal('init'));\r\n        // Регистрация обработчиков событий\r\n        await Promise.all(this.callModuleSignal('event'));\r\n        // Загрузка модуля, создание объектов взаимодействия\r\n        await Promise.all(this.callModuleSignal('load'));\r\n        // Загружены все модули\r\n        await Promise.all(this.callModuleSignal('launch'));\r\n        // Загрузка приложения, все модули загружены\r\n        await Promise.all(this.callModuleSignal(['application', 'app', 'run']));\r\n    }\r\n\r\n    /**\r\n     * Вызов сигналов модулей\r\n     * \r\n     * @param {Array<string>} signalList - Массив сигналов\r\n     * @returns {Array<Promise>} - Массив Promise, полученных в результате обработки сигналов\r\n     */\r\n    callModuleSignal(signalList) {\r\n        if(typeof(signalList) == 'string') {\r\n            signalList = [signalList];\r\n        }\r\n        \r\n        this.signalAutoloadList = this.signalAutoloadList.concat(signalList);\r\n        let resultAwait = [];\r\n        signalList.map((signalName) => {\r\n            resultAwait = resultAwait.concat(this.signal(signalName, this.coreContext));\r\n        }, this);\r\n        signalList.map(((signalName) => {\r\n            this.coreContext.event.dispatchEvent(new this.coreContext.CoreEvent(\"modules.globalTarget.\" + signalName))\r\n        }), this);\r\n        return resultAwait;\r\n    }\r\n};\r\n\r\n/**\r\n * Модуль\r\n */\r\nclass Module {\r\n    id = null;\r\n    require = null;\r\n    loaded = null;\r\n    info = null;\r\n    exports = null;\r\n    events = null;\r\n    units = null;\r\n    signals = null;\r\n\r\n    /**\r\n     * Конструктор модуля.\r\n     * \r\n     * @constructor\r\n     * @this { Module }\r\n     * \r\n     * @param {string} id - Идентификатор модуля.\r\n     * @param {Object} options - Параметры модуля со свойствами:\r\n     * @param {void} options.require? - Функция, вызываемая при импорте модуля\r\n     * @param {boolean} options.loaded? - Module loaded state\r\n     * @param {Object} options.info? - Module info\r\n     */\r\n    constructor(id, options) {\r\n        options = (options || {});\r\n\r\n        this.id = (id || null);\r\n        this.require = (options.require || ((module) => {module.exports = module;}));\r\n        this.loaded = (options.loaded || false);\r\n        this.info = (options.info || {});\r\n        this.exports = {};\r\n        this.events = new EventTarget();\r\n        this.units = new UnitSignalManager(this);\r\n        this.signals = new ModuleSignalManager(this);\r\n    }\r\n};\r\n/**\r\n * Менеджер модулей\r\n */\r\nclass ModuleManager {\r\n    modules = null;\r\n    state = null;\r\n    signals = null;\r\n    coreContext = null;\r\n    \r\n    /**\r\n     * Конструктор менеджера модулей\r\n     * \r\n     * @param {Module} coreContext \r\n     */\r\n    constructor(coreContext) {\r\n        this.modules = {};\r\n        this.state = {};\r\n        this.coreContext = coreContext;\r\n        this.signals = new ModuleManagerSignalManager(coreContext, this);\r\n\r\n        this.require = ((moduleId) => {\r\n            if (!(moduleId in this.modules)) {\r\n                throw new ModuleNotFoundError(moduleId, this);\r\n            }\r\n            if (this.modules[moduleId].loaded) {\r\n                return this.modules[moduleId].exports;\r\n            }\r\n            this.modules[moduleId].exports = {};\r\n            if(this.modules[moduleId].require) {\r\n                this.modules[moduleId].require.call(\r\n                    this.modules[moduleId].exports,\r\n                    this.modules[moduleId],\r\n                    this.modules[moduleId].exports,\r\n                    this.require\r\n                );\r\n            }\r\n            this.modules[moduleId].loaded = true;\r\n            return this.modules[moduleId].exports;\r\n        }).bind(this);\r\n\r\n        if(this.coreContext) {\r\n            this.installModule(this.coreContext);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * \r\n     * @this { ModuleManager }\r\n     * \r\n     * @param module - The module object to install.\r\n     * @param init - If true, the module will be initialized immediately.\r\n     */\r\n    installModule(module, init) {\r\n        this.modules[module.id] = module;\r\n        Object.defineProperty(this, module.id, {\r\n            writable: false,\r\n            value: module\r\n        })\r\n        Object.defineProperty(module, 'moduleManager', {\r\n            writable: false,\r\n            value: this\r\n        })\r\n        if (init) {\r\n            this.require(module.id);\r\n        }\r\n    }\r\n};\r\n\r\nconst unitSignals = {\r\n    // Инициализация менеджера модулей, регистрация модуля ядра\r\n    init: ((coreContext) => {\r\n        coreContext.modules = new coreContext.ModuleManager(coreContext);\r\n    }),\r\n    // Добавление стандартного обработчика при импорте модуля\r\n    load: ((coreContext) => {\r\n        coreContext.modules.signals.signalAutoloadList.push('preinit');\r\n    })\r\n};\r\n\r\nmodule.exports = {\r\n    ModuleNotFoundError,\r\n    UnitSignalManager,\r\n    ModuleSignalManager,\r\n    ModuleManagerSignalManager,\r\n    Module,\r\n    ModuleManager,\r\n    unitSignals\r\n};\r\n\r\n","module.exports = require('./entry').send();\r\n\r\n","const { moduleCreate } = require('/src/utils/module');\r\n\r\nmodule.exports = moduleCreate('libHelper', ((moduleContext, coreContext) => {\r\n    // moduleContext.info.name = 'Lib Helper';\r\n    // moduleContext.info.version = '1.0.0';\r\n    // moduleContext.info.versionAlpha = true;\r\n    // moduleContext.info.versionBeta = false;\r\n    \r\n    moduleContext.units.register(require('./units/objectHelper'));\r\n    moduleContext.units.register(require('./units/functionHelper'));\r\n    moduleContext.units.register(require('./units/stringHelper'));\r\n    moduleContext.units.register(require('./units/linkHelper'));\r\n}));\r\n\r\n","class FunctionHook {\r\n    originalFunction = null;\r\n    this = null;\r\n    args = null;\r\n    result = (void 0);\r\n\r\n    constructor(originalFunction, runtimeThis, runtimeArgs) {\r\n        this.originalFunction = originalFunction;\r\n        this.runtimeThis = runtimeThis;\r\n        this.args = runtimeArgs;\r\n        this.result = (void 0);\r\n    }\r\n\r\n    callOriginal() {\r\n        this.result = this.originalFunction.apply(this.this, this.args);\r\n    }\r\n};\r\n\r\nclass FunctionHelper {\r\n    static pathFunction(object, propertyName, hookCallback) {\r\n        if((!(propertyName in object)) || (typeof(object[propertyName]) != 'function')) {\r\n            return false;\r\n        }\r\n        const originalFunction = object[propertyName];\r\n        object[propertyName] = (function (...args) {\r\n            let hookObject = new FunctionHook(originalFunction, this, args);\r\n            hookCallback(hookObject);\r\n            return hookObject.result;\r\n        });\r\n    }\r\n\r\n    static pathFunctionSimpleBefore(object, propertyName, hookCallback) {\r\n        if((!(propertyName in object)) || (typeof(object[propertyName]) != 'function')) {\r\n            return false;\r\n        }\r\n        const originalFunction = object[propertyName];\r\n        object[propertyName] = (function (...args) {\r\n            hookCallback.apply(this, args);\r\n            return originalFunction.apply(this, args);\r\n        });\r\n    }\r\n\r\n    static pathFunctionSimpleAfter(object, propertyName, hookCallback) {\r\n        if((!(propertyName in object)) || (typeof(object[propertyName]) != 'function')) {\r\n            return false;\r\n        }\r\n        const originalFunction = object[propertyName];\r\n        object[propertyName] = (function (...args) {\r\n            let result = originalFunction.apply(this, args);\r\n            hookCallback.apply(this, args);\r\n            return result;\r\n        });\r\n    }\r\n};\r\n\r\nmodule.exports = {\r\n    FunctionHook,\r\n    FunctionHelper\r\n};\r\n\r\n","const { domContext } = require('/src/utils/context');\r\n\r\nclass LinkHelper {\r\n    static getRoot(link) {\r\n        const result = /^(?:[^\\/]*:\\/\\/)?[^\\/]+/.exec(link);\r\n        if(result) {\r\n            return result[0];\r\n        }\r\n        return link;\r\n    }\r\n    static getBase(link) {\r\n        const result = /^[^?#]+\\//.exec(link);\r\n        if(result) {\r\n            return result[0];\r\n        }\r\n        return link;\r\n    }\r\n    static linkAbsolute(link, linkPage) {\r\n        if(!link || !linkPage) {\r\n            return null;\r\n        }\r\n        if(link.startsWith('//')) {\r\n            return 'https://' + link.slice(2);\r\n        }\r\n        if(link.startsWith('/')) {\r\n            return LinkHelper.getRoot(linkPage) + link;\r\n        }\r\n        return LinkHelper.getBase(linkPage) + link;\r\n    }\r\n    static linkWithoutPage(originalLink) {\r\n        let execResult = /^.*\\//.exec(originalLink);\r\n        if(execResult) {\r\n            return execResult[0];\r\n        }\r\n        return originalLink;\r\n    }\r\n\tstatic getSearchInURL(link) {\r\n\t\tif(!link) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst search = /\\?([^#]*)/.exec(link);\r\n\t\tif(!search) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn search[1];\r\n\t}\r\n    static getQueryVariable(paramName, location) {\r\n        let vars = (LinkHelper.getSearchInURL(location) || domContext.location.search).substring(1).split('&');\r\n        for (let i = 0; i < vars.length; i++) {\r\n            let pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == paramName) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n};\r\n\r\nmodule.exports = {\r\n    LinkHelper\r\n}\r\n\r\n","class ObjectHelper {\r\n    static getPropertyName(object, propertyNameStart, resultOnce) {\r\n        const objectNames = Object.getOwnPropertyNames(object);\r\n        const resultList = objectNames.filter((propertyName) => propertyName.startsWith(propertyNameStart));\r\n        if(resultOnce) {\r\n            if(resultList.length) {\r\n                return resultList[0];\r\n            }\r\n            return null;\r\n        }\r\n        return resultList;\r\n    }\r\n\r\n    static getProperty(object, propertyNameStart, resultOnce) {\r\n        const objectNames = Object.getOwnPropertyNames(object);\r\n        const resultList = objectNames\r\n            .filter((propertyName) => propertyName.startsWith(propertyNameStart))\r\n            .map((propertyName) => object[propertyName]);\r\n        if(resultOnce) {\r\n            if(resultList.length) {\r\n                return resultList[0];\r\n            }\r\n            return null;\r\n        }\r\n        return resultList;\r\n    }\r\n};\r\n\r\nmodule.exports = {\r\n    ObjectHelper\r\n};\r\n\r\n","class FormatString {\r\n    sourceString = null;\r\n\r\n    constructor(sourceString) {\r\n        this.sourceString = (sourceString || null);\r\n    }\r\n\r\n    formatValuePython(data) {\r\n        return this.sourceString.replace(/{(\\d+)}/g, ((match, number) => (typeof(data[number])) != 'undefined' ? data[number]: match));\r\n    }\r\n\r\n    formatValue(data) {\r\n        return this.sourceString.replace(/%(\\d+)/g, ((match, number) => (typeof(data[number])) != 'undefined' ? data[number]: match));\r\n    }\r\n\r\n    toString() {\r\n        return this.sourceString;\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    FormatString\r\n};\r\n\r\n","module.exports = require('./entry').send();\r\n\r\n","const { moduleCreate } = require('/src/utils/module');\r\n\r\nmodule.exports = moduleCreate('libWebpack', ((moduleContext, coreContext) => {\r\n    // moduleContext.info.name = 'Lib Webpack';\r\n    // moduleContext.info.version = '1.0.0';\r\n    // moduleContext.info.versionAlpha = true;\r\n    // moduleContext.info.versionBeta = false;\r\n\r\n    moduleContext.units.register(require('./units/webpackModuleManager'));\r\n    moduleContext.units.register(require('./units/advancedWebpackModuleManager'));\r\n}));\r\n\r\n","const { WebpackModuleManager } = require('./webpackModuleManager');\r\n\r\nclass AdvancedWebpackModuleManager extends WebpackModuleManager {\r\n    getExports(searchData, resultOnce) {\r\n        const className = searchData.split('.').pop();\r\n        this.webpackRequireList(this.searchMetadataClass(className));\r\n        const searchResult = this.searchExports(searchData, resultOnce);\r\n        if(resultOnce) {\r\n            return searchResult;\r\n        }\r\n        const resultList = [];\r\n        for (const moduleId in searchResult) {\r\n            resultList.push(searchResult[moduleId]);\r\n        }\r\n        return resultList;\r\n    }\r\n    searchMetadataClass(searchClass, resultOnce) {\r\n        return this.searchSource('simpleName:\"' + searchClass + '\"', resultOnce);\r\n    }\r\n    searchMetadataClassRegEx(searchClass, resultOnce) {\r\n        return this.searchSourceRegEx(\r\n            new RegExp('\\\\$metadata\\\\$={(?:kind:[^:]+,)?simpleName:\"(?:' + (searchClass ? searchClass : '[^{}]+') + ')\"(?:,interfaces:)?'), resultOnce\r\n        );\r\n    }\r\n    searchSource(searchCode, resultOnce) {\r\n        const availableModules = [];\r\n        for (const moduleId in this.modules) {\r\n            if (this.modules[moduleId].toString().indexOf(searchCode) != (-1)) {\r\n                availableModules.push(moduleId);\r\n            }\r\n        }\r\n        if (resultOnce) {\r\n            return availableModules.shift();\r\n        }\r\n        return availableModules;\r\n    }\r\n    searchSourceRegEx(searchCodeRegEx, resultOnce) {\r\n        const availableModules = [];\r\n        for (const moduleId in this.modules) {\r\n            if (searchCodeRegEx.test(this.modules[moduleId].toString())) {\r\n                availableModules.push(moduleId);\r\n            }\r\n        }\r\n        if (resultOnce) {\r\n            return availableModules.shift();\r\n        }\r\n        return availableModules;\r\n    }\r\n    searchExports(searchData, resultOnce) {\r\n        if (typeof(searchData) == \"string\") {\r\n            searchData = searchData.split(\".\");\r\n        }\r\n        let availableModules = {};\r\n        const searchDataRuntime = Array.from(searchData);\r\n        let searchValue = null;\r\n\r\n        for (const moduleId in this.installedModules) {\r\n            if (this.installedModules[moduleId].exports === null) {\r\n                continue;\r\n            }\r\n            if (\r\n                typeof this.installedModules[moduleId].exports != \"object\" &&\r\n                typeof this.installedModules[moduleId].exports != \"function\"\r\n            ) {\r\n                continue;\r\n            }\r\n            availableModules[moduleId] = this.installedModules[moduleId].exports;\r\n        }\r\n        while ((searchValue = searchDataRuntime.shift())) {\r\n            const availableModulesNext = {};\r\n            for (const moduleId in availableModules) {\r\n                if (!Object.hasOwnProperty.call(availableModules[moduleId], searchValue)) {\r\n                    continue;\r\n                }\r\n                if (typeof availableModules[moduleId][searchValue] === null) {\r\n                    continue;\r\n                }\r\n                if (\r\n                    (typeof availableModules[moduleId][searchValue] != \"object\") &&\r\n                    (typeof availableModules[moduleId][searchValue] != \"function\")\r\n                ) {\r\n                    continue;\r\n                }\r\n                availableModulesNext[moduleId] = availableModules[moduleId][searchValue];\r\n            }\r\n            availableModules = availableModulesNext;\r\n        }\r\n        if (resultOnce) {\r\n            for (const moduleId in availableModules) {\r\n                return availableModules[moduleId];\r\n            }\r\n        }\r\n        return availableModules;\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    AdvancedWebpackModuleManager\r\n};\r\n\r\n","/**\r\n * Мненджер webpack-модулей\r\n */\r\nclass WebpackModuleManager {\r\n    installedModules = null;\r\n    modules = null;\r\n\r\n    constructor(modules) {\r\n        this.modules = (modules || {});\r\n        this.installedModules = [];\r\n\r\n        const __webpack_require__ = (function (moduleId) {\r\n            if (this.installedModules[moduleId]) {\r\n                return this.installedModules[moduleId].exports;\r\n            }\r\n            let module = this.installedModules[moduleId] = {\r\n                i: moduleId,\r\n                l: false,\r\n                exports: {}\r\n            };\r\n            this.modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n            module.l = true;\r\n            return module.exports;\r\n        }).bind(this);\r\n        __webpack_require__.m = this.modules;\r\n        __webpack_require__.c = this.installedModules;\r\n\r\n        this.harmonyExport = this.export = __webpack_require__.d = (function (exports, name, getter) {\r\n            if (!__webpack_require__.o(exports, name)) {\r\n                Object.defineProperty(exports, name, { enumerable: true, get: getter });\r\n            }\r\n        });\r\n\r\n        __webpack_require__.r = (function (exports) {\r\n            if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n                Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n            }\r\n            Object.defineProperty(exports, '__esModule', { value: true });\r\n        });\r\n\r\n        __webpack_require__.t = (function (value, mode) {\r\n            if (mode & 1) value = __webpack_require__(value);\r\n            if (mode & 8) return value;\r\n            if ((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n            let ns = Object.create(null);\r\n            __webpack_require__.r(ns);\r\n            Object.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n            if (mode & 2 && typeof value != 'string') for (let key in value) __webpack_require__.d(ns, key, function (key) { return value[key]; }.bind(null, key));\r\n            return ns;\r\n        });\r\n\r\n        this.getDefaultExport = __webpack_require__.n = (function (module) {\r\n            let getter = module && module.__esModule ?\r\n                function getDefault() { return module['default']; } :\r\n                function getModuleExports() { return module; };\r\n            __webpack_require__.d(getter, 'a', getter);\r\n            return getter;\r\n        });\r\n        __webpack_require__.o = (function (object, property) {\r\n            return Object.prototype.hasOwnProperty.call(object, property);\r\n        });\r\n        __webpack_require__.p = \"\";\r\n        __webpack_require__.s = null;\r\n        this.webpackRequire = this.__webpack_require__ = __webpack_require__;\r\n    }\r\n    \r\n    installModule(id, callback, init) {\r\n        this.modules[id] = callback;\r\n        if (init) {\r\n            return this.webpackRequire(id);\r\n        }\r\n    }\r\n\r\n    get __webpack_public_path__() {\r\n        return this.__webpack_require__.p;\r\n    }\r\n\r\n    set __webpack_public_path__(value) {\r\n        this.__webpack_require__.p = value;\r\n    }\r\n\r\n    get publicPath() {\r\n        return this.__webpack_require__.p;\r\n    }\r\n\r\n    set publicPath(value) {\r\n        this.__webpack_require__.p = value;\r\n    }\r\n\r\n    get __webpack_entry__() {\r\n        return this.__webpack_require__.s;\r\n    }\r\n\r\n    set __webpack_entry__(value) {\r\n        this.__webpack_require__.s = value;\r\n    }\r\n\r\n    get entry() {\r\n        return this.__webpack_require__.s;\r\n    }\r\n\r\n    set entry(value) {\r\n        this.__webpack_require__.s = value;\r\n    }\r\n\r\n    get entryModule() {\r\n        return this.__webpack_require__.s;\r\n    }\r\n\r\n    set entryModule(value) {\r\n        this.__webpack_require__.s = value;\r\n    }\r\n\r\n    loadEntryModule(entry) {\r\n        if(entry) {\r\n            this.__webpack_require__.s = entry;\r\n        }\r\n        this.webpackRequire(this.__webpack_require__.s);\r\n    }\r\n\r\n    webpackRequireList(moduleIdList) {\r\n        let result = {};\r\n        moduleIdList.map((e) => {result[e] = this.__webpack_require__(e)});\r\n        return result;\r\n    }\r\n};\r\n\r\nmodule.exports = {\r\n    WebpackModuleManager\r\n};\r\n\r\n","module.exports = require('./entry').send();\r\n\r\n","const { moduleCreate, defaultModuleCreateSignals } = require('/src/utils/module');\r\n\r\nmodule.exports = moduleCreate('tankionlineHooks', ((moduleContext, coreContext) => {\r\n    // moduleContext.info.name = 'Tanki Online: Hooks';\r\n    // moduleContext.info.version = '1.0.0';\r\n    // moduleContext.info.versionAlpha = true;\r\n    // moduleContext.info.versionBeta = false;\r\n    \r\n    moduleContext.units.register(require('./units/hookManager'));\r\n    // moduleContext.units.register(require('./units/hooks/fastOpenContainerHook'));\r\n    moduleContext.units.register(require('./units/hooks/battleMessagesHook'));\r\n}), defaultModuleCreateSignals);\r\n\r\n","const unitSignals = {\r\n    init:((moduleContext, coreContext) => {\r\n\t\tmoduleContext.hooks = [];\r\n    }),\r\n    event: ((moduleContext, coreContext) => {\r\n\t\tcoreContext.event.addEventListener(\"tankionlineLoader.entry.launch\", ((event) => {\r\n            const webpackData = coreContext.modules.require('tankionlineWebpack').webpackData;\r\n            for (const hookName in moduleContext.hooks) {\r\n                const hookInfo = moduleContext.hooks[hookName];\r\n                if(hookInfo && hookInfo.enabled && hookInfo.callback) {\r\n                    hookInfo.callback(webpackData, hookInfo)\r\n                }\r\n            }\r\n        }));\r\n    })\r\n};\r\n\r\nmodule.exports = {\r\n    unitSignals\r\n};\r\n\r\n","const unitSignals = {\r\n    load:((moduleContext, coreContext) => {\r\n\t\tmoduleContext.hooks['BattleMessagesHook'] = {\r\n            enabled: true,\r\n            callback: ((webpackData, hookInfo) => {\r\n                const FormatString = coreContext.modules.require(\"libHelper\").FormatString;\r\n                const FunctionHelper = coreContext.modules.require(\"libHelper\").FunctionHelper;\r\n                const ObjectHelper = coreContext.modules.require(\"libHelper\").ObjectHelper;\r\n            \r\n                // Патч отсутствующих сообщений в бою\r\n                const eventData = {\r\n                    notifyFlagDropped: {\r\n                        playerMessage: new FormatString(\"%0 потерял флаг\"),\r\n                        defaultMessage: new FormatString(\"Флаг потерян\") // TODO: Такое бывает?\r\n                    },\r\n                    notifyFlagReturned: {\r\n                        playerMessage: new FormatString(\"%0 возвратил флаг\"),\r\n                        defaultMessage: new FormatString(\"Флаг возвращен\")\r\n                    }\r\n                };\r\n            \r\n                const CaptureFlagComponent = webpackData.getExports('tanks.client.battle.objects.modes.ctf.component.CaptureFlagComponent', true);\r\n                const BattleTeam = webpackData.getExports('projects.tanks.multiplatform.battleservice.model.battle.team.BattleTeam', true);\r\n                const TeamRelation = webpackData.getExports('tanks.client.lobby.redux.battle.hud.TeamRelation', true);\r\n                const BattleMessageType = webpackData.getExports('tanks.client.lobby.redux.battle.hud.BattleMessageType', true);\r\n                const BattleMessagesComponent = webpackData.getExports('tanks.client.battle.hud.BattleMessagesComponent', true);\r\n                const LocalizedComponent = webpackData.getExports('com.alternativaplatform.redux.react.LocalizedComponent', true);\r\n                \r\n                // Патч локализации\r\n                const getLocalizedKeyByBattleMessage = BattleMessagesComponent.prototype.getLocalizedKeyByBattleMessage_0;\r\n                BattleMessagesComponent.prototype.getLocalizedKeyByBattleMessage_0 = (function(battleMessage, ...args) {\r\n                    if(battleMessage instanceof FormatString) {\r\n                        return battleMessage;\r\n                    }\r\n                    return getLocalizedKeyByBattleMessage.call(this, battleMessage, ...args);\r\n                });\r\n                \r\n                // Патч локализации\r\n                const getTextPropertyNameList = ObjectHelper.getPropertyName(LocalizedComponent.prototype, 'getText_');\r\n                getTextPropertyNameList.map((propertyName) => {\r\n                    let originalFunciton = LocalizedComponent.prototype[propertyName];\r\n                    LocalizedComponent.prototype[propertyName] = (function(...args) {\r\n                        if((!args.length) || !(args[0] instanceof FormatString)) {\r\n                            return originalFunciton.apply(this, args);\r\n                        }\r\n                        return (args[0]).formatValue(args.slice(1));\r\n                    });\r\n                });\r\n            \r\n                /*\r\n                // Изучение сообщений\r\n                ObjectHelper.pathFunctionSimpleBefore(\r\n                    CaptureFlagComponent.prototype,\r\n                    ObjectHelper.getPropertyName(CaptureFlagComponent.prototype, 'notifyFlagFacedOff', true),\r\n                    (function (...args) {\r\n                        moduleContext.logger.info(\"CaptureFlagComponent.prototype.notifyFlagFacedOff(%O, %O)\", this, args);\r\n                }));\r\n            \r\n                // Изучение сообщений\r\n                ObjectHelper.pathFunctionSimpleBefore(\r\n                    CaptureFlagComponent.prototype,\r\n                    ObjectHelper.getPropertyName(CaptureFlagComponent.prototype, 'notifyFlagExiled', true),\r\n                    (function (...args) {\r\n                        moduleContext.logger.info(\"CaptureFlagComponent.prototype.notifyFlagExiled(%O, %O)\", this, args);\r\n                }));\r\n            \r\n                // Изучение сообщений\r\n                ObjectHelper.pathFunctionSimpleBefore(\r\n                    CaptureFlagComponent.prototype,\r\n                    ObjectHelper.getPropertyName(CaptureFlagComponent.prototype, 'notifyReadyToFaceOff', true),\r\n                    (function (...args) {\r\n                        moduleContext.logger.info(\"CaptureFlagComponent.prototype.notifyReadyToFaceOff(%O, %O)\", this, args);\r\n                }));\r\n                */\r\n            \r\n                const getTypePropertyName = ObjectHelper.getPropertyName(BattleMessageType.Companion.__proto__, 'getType', true);\r\n                for(const eventName in eventData) {\r\n                    FunctionHelper.pathFunctionSimpleBefore(\r\n                        CaptureFlagComponent.prototype,\r\n                        ObjectHelper.getPropertyName(CaptureFlagComponent.prototype, eventName, true),\r\n                        (function (flagObject, battleEntityObject) {\r\n                            // moduleContext.logger.info(\"CaptureFlagComponent.prototype.\" + eventName + \"(flagOwner: %O, playerTeam: %O)\", this, flagObject.teamType.name, this.gameMode_0.possesedTankTeam.name);\r\n                            function teamCompare(teamFirst, teamSecond) {\r\n                                return ((teamFirst === teamSecond) && (teamFirst !== BattleTeam.NONE));\r\n                            }\r\n                            function getTeamRelationEx(teamFirst, teamSecond, isAlly) {\r\n                                return ((isAlly == teamCompare(teamFirst, teamSecond)) ? TeamRelation.ALLY : TeamRelation.ENEMY);\r\n                            }\r\n                            function getTeamRelation(gameMode, flagTeamOwner, isAlly) {\r\n                                if(gameMode && gameMode.possesedTankTeam) {\r\n                                    return getTeamRelationEx(gameMode.possesedTankTeam, flagTeamOwner, isAlly)\r\n                                }\r\n                                return null;\r\n                            }\r\n                            const teamRelation = getTeamRelation(this.gameMode_0, flagObject.teamType, false);\r\n                            if(battleEntityObject) {\r\n                                this.addBattleLogMessage_0(\r\n                                    eventData[eventName].playerMessage,\r\n                                    battleEntityObject, (\r\n                                        (teamRelation !== null)\r\n                                        ? BattleMessageType.Companion[getTypePropertyName].call(BattleMessageType.Companion, teamRelation, false)\r\n                                        : BattleMessageType.WHITE\r\n                                    )\r\n                                );\r\n                            } else {\r\n                                this.addBattleLogMessage_1(\r\n                                    eventData[eventName].defaultMessage, (\r\n                                        (teamRelation !== null)\r\n                                        ? BattleMessageType.Companion[getTypePropertyName].call(BattleMessageType.Companion, teamRelation, false)\r\n                                        : BattleMessageType.WHITE\r\n                                    )\r\n                                );\r\n                            }\r\n                            \r\n                    }));\r\n                }\r\n            })\r\n        };\r\n    })\r\n};\r\n\r\nmodule.exports = {\r\n    unitSignals\r\n};\r\n\r\n","const { domContext } = require('/src/utils/context');\r\n\r\nconst baseGamePage = 'https://tankionline.com/play/';\r\n\r\nconst mutatePage = ((linkGamePage, linkCurrent) => {\r\n    let currentRegExp;\r\n    if(currentRegExp = /^([^\\/]+?:\\/\\/[^\\/]+)\\/hook(\\/.*)$/.exec(linkCurrent)) {\r\n        return currentRegExp[1] + currentRegExp[2];\r\n    }\r\n    if(currentRegExp = /^([^\\/]+?:\\/\\/[^\\/]+\\/.*\\/)hook\\/?$/.exec(linkCurrent)) {\r\n        return currentRegExp[1];\r\n    }\r\n    return linkGamePage;\r\n});\r\n\r\nconst getGameInfo = (() => {\r\n    return {\r\n        linkGamePage: baseGamePage,\r\n        linkReferer: baseGamePage\r\n    }\r\n});\r\n\r\nmodule.exports = {\r\n    paramOriginalScript: 'forceScript',\r\n    paramOriginalPage: 'forcePage',\r\n    mutatePage,\r\n    mutateScript: ((linkScript, linkGamePage, linkCurrent) => linkScript),\r\n    getGameInfo,\r\n    getPageContentRewriteStatus: (() => true),\r\n    getBaseRewriteStatus: (() => true),\r\n};\r\n\r\n","module.exports = require('./entry').send();\r\n\r\n","const { moduleCreate, defaultModuleCreateSignals } = require('/src/utils/module');\r\n\r\nmodule.exports = moduleCreate('tankionlineLoader', ((moduleContext, coreContext) => {\r\n    // moduleContext.info.name = 'Tanki Online: Loader';\r\n    // moduleContext.info.version = '1.0.0';\r\n    // moduleContext.info.versionAlpha = true;\r\n    // moduleContext.info.versionBeta = false;\r\n    \r\n    moduleContext.units.register(require('./units/gameLoader'));\r\n    moduleContext.units.register(require('./units/gameScriptLoader'));\r\n}), defaultModuleCreateSignals);\r\n\r\n","const { getDocument } = require('/src/utils/context');\r\nconst { getPageContentRewriteStatus, getBaseRewriteStatus } = require('./../config');\r\n\r\nconst unitSignals = {\r\n    init: ((moduleContext, coreContext) => {\r\n        moduleContext.libHelper = null;\r\n\r\n        moduleContext.webpackData = null;\r\n\t\tmoduleContext.webpackSource = null;\r\n    }),\r\n    moduleLoad: (async (moduleContext, coreContext) => {\r\n        moduleContext.libHelper = coreContext.modules.require('libHelper');\r\n        let libTankionlineWebpack = coreContext.modules.require('tankionlineWebpack');\r\n\r\n        moduleContext.webpackData = libTankionlineWebpack.webpackData;\r\n\t\tmoduleContext.webpackSource = libTankionlineWebpack.webpackSource;\r\n        \r\n        await moduleContext.ScriptLoader.getMainScriptContentAuto(moduleContext.webpackSource, moduleContext.libHelper);\r\n    }),\r\n    moduleApplication: ((moduleContext, coreContext) => {\r\n        if(!moduleContext.webpackSource.mainScriptWebpackElements || !moduleContext.webpackSource.mainScriptWebpackPath || !moduleContext.webpackSource.mainScriptWebpackEntry) {\r\n            moduleContext.logger.error('Fail: webpackSource is corrupted: %O', moduleContext.webpackSource);\r\n            return;\r\n        }\r\n        const document = getDocument();\r\n        if(getPageContentRewriteStatus() && moduleContext.webpackSource.pageContent) {\r\n            if (coreContext.event.dispatchEvent(new coreContext.ModuleEvent(moduleContext, \"htmlRewrite.fullDocument\", {cancelable: true}))) {\r\n                document.firstChild.innerHTML = moduleContext.webpackSource.pageContent;\r\n            }\r\n        }\r\n        if(getBaseRewriteStatus() && moduleContext.webpackSource.linkBase) { \r\n            if (coreContext.event.dispatchEvent(new coreContext.ModuleEvent(moduleContext, \"htmlRewrite.headBase\", {cancelable: true}))) {\r\n                Array.from(document.getElementsByTagName('base')).map((element) => element.remove());\r\n                let headElement = document.head;\r\n                if(!headElement) {\r\n                    let headList = document.getElementsByTagName('head');\r\n                    if(headList.length) {\r\n                        headElement = headList[0];\r\n                    } else {\r\n                        moduleContext.logger.warn('DOM base element load error: document.head');\r\n                    }\r\n                }\r\n                if(headElement) {\r\n                    let insertElement = document.createElement('base');\r\n                    insertElement.setAttribute('href', moduleContext.webpackSource.linkBase);\r\n                    headElement.insertBefore(insertElement, (headElement.firstChild || null));\r\n                }\r\n            }\r\n        }\r\n\r\n        if(coreContext.event.dispatchEvent(new coreContext.ModuleEvent(moduleContext, \"dataLoad\", {cancelable: true}))) {\r\n            moduleContext.webpackData.modules = eval(moduleContext.webpackSource.mainScriptWebpackElements);\r\n            moduleContext.webpackData.publicPath = moduleContext.webpackSource.mainScriptWebpackPath;\r\n            moduleContext.webpackData.entryModule = moduleContext.webpackSource.mainScriptWebpackEntry;\r\n        }\r\n\r\n        if(moduleContext.webpackData.modules) {\r\n            const entryModule = moduleContext.webpackData.entryModule;\r\n\r\n            coreContext.event.dispatchEvent(new coreContext.ModuleEvent(moduleContext, \"dataLoaded\", {cancelable: false, detail: {\r\n                webpackData: moduleContext.webpackData\r\n            }}));\r\n\r\n            if (coreContext.event.dispatchEvent(new coreContext.ModuleEvent(moduleContext, \"entry.launch\", {cancelable: true, detail: {\r\n                webpackData: moduleContext.webpackData\r\n            }}))) {\r\n                const result = moduleContext.webpackData.loadEntryModule();\r\n                coreContext.event.dispatchEvent(new coreContext.ModuleEvent(moduleContext, \"entry.launched\", {cancelable: false, detail: {\r\n                    returnValue: result,\r\n                    isOriginalModule: (entryModule == moduleContext.webpackData.entryModule)\r\n                }}));\r\n            }\r\n        }\r\n    })\r\n};\r\n\r\nmodule.exports = {\r\n    unitSignals\r\n};\r\n\r\n","const { paramOriginalScript, paramOriginalPage, mutatePage, mutateScript, getGameInfo } = require('./../config');\r\nconst { getDocument, domContext } = require('/src/utils/context');\r\n\r\nclass NetworkUtils {\r\n    static async getContent(linkPage, linkReferer) {\r\n        let response = await fetch(linkPage, {\r\n            referrer: linkReferer,\r\n            referrerPolicy: \"strict-origin-when-cross-origin\",\r\n            body: null,\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            credentials: \"omit\"\r\n        });\r\n        if (response.status !== 200) {\r\n            return null;\r\n        }\r\n        let pageContent = await response.text();\r\n        if(!pageContent) {\r\n            return null;\r\n        }\r\n        return pageContent;\r\n    }\r\n};\r\nclass GameInfoCollector {\r\n    libHelper = null;\r\n    linkGamePage = null;\r\n    linkReferer = null;\r\n\r\n    constructor(libHelper, linkGamePage, linkReferer) {\r\n        this.libHelper = libHelper;\r\n        this.linkGamePage = linkGamePage;\r\n        this.linkReferer = linkReferer;\r\n    }\r\n\r\n    getGamePage() {\r\n        const forceGamePage = this.libHelper.LinkHelper.getQueryVariable(paramOriginalPage);\r\n        if(forceGamePage) {\r\n            return forceGamePage;\r\n        }\r\n        if(this.linkGamePage) {\r\n            return mutatePage(this.linkGamePage, domContext.location.href);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getGameScript(gameScript) {\r\n        const forceGameScript = this.libHelper.LinkHelper.getQueryVariable(paramOriginalScript);\r\n        if(forceGameScript) {\r\n            return forceGameScript;\r\n        }\r\n        if(gameScript) {\r\n            return mutateScript(gameScript, this.getGamePage(), domContext.location.href);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getGameInfo() {\r\n        return null;\r\n    }\r\n};\r\nclass ParamGameInfoCollector extends GameInfoCollector {\r\n    getGameInfo() {\r\n        const originalScript = this.getGameScript();\r\n        if(!originalScript) {\r\n            return null;\r\n        }\r\n        return {\r\n            linkScript: this.libHelper.LinkHelper.linkAbsolute(originalScript, this.getGamePage()),\r\n            linkBase: this.libHelper.LinkHelper.getBase(this.getGamePage())\r\n        };\r\n    }\r\n};\r\nclass DocumentGameInfoCollector extends GameInfoCollector {\r\n    getGameInfo() {\r\n        let scriptElement = getDocument().querySelector(\r\n            'script[src*=\"main.\"][src*=\".js\"][src^=\"/\"]:not([src^=\"//\"])'\r\n        );\r\n        if (!scriptElement) {\r\n            return null;\r\n        }\r\n        return {\r\n            linkScript: this.getGameScript(this.libHelper.LinkHelper.linkAbsolute(scriptElement.getAttribute(\"src\"), this.linkGamePage)),\r\n            linkBase: this.libHelper.LinkHelper.getBase(this.getGamePage()),\r\n            scriptLoaded: true\r\n        };\r\n    }\r\n};\r\nclass SourceGameInfoCollector extends GameInfoCollector {\r\n    async getGameInfo() {\r\n        const pageContent = await NetworkUtils.getContent(this.getGamePage(), this.linkReferer);\r\n        if(!pageContent) {\r\n            return;\r\n        }\r\n        const contentQuery = /<script[^>]+src=\"([^\">]+main.[0-9a-f]{8}.js)\"[^>]*><\\/script>/i.exec(pageContent);\r\n        if(!contentQuery) {\r\n            return null;\r\n        }\r\n        return {\r\n            linkScript: this.getGameScript(this.libHelper.LinkHelper.linkAbsolute(contentQuery[1], this.getGamePage())),\r\n            linkBase: this.libHelper.LinkHelper.getBase(this.getGamePage()),\r\n            pageContent: pageContent.replace(/<script[^>]+src=\"[^\">]+\"[^>]*><\\/script>/i, '')\r\n        };\r\n    }\r\n};\r\nclass ScriptLoader {\r\n    static parseMainScript(scriptContent) {\r\n        if(!scriptContent) {\r\n            return null;\r\n        }\r\n        let scriptContentPosition = scriptContent.indexOf(\"}([function(t,e,n){\") + 2;\r\n        let sourceData = {\r\n            mainScriptWebpackElements: scriptContent.substring(scriptContentPosition, scriptContent.lastIndexOf(\"]\") + 1),\r\n            mainScriptWebpackPath: null,\r\n            mainScriptWebpackEntry: null\r\n        }\r\n        scriptContent = scriptContent.substring(0, scriptContentPosition);\r\n        sourceData.mainScriptWebpackPath = scriptContent.substring(scriptContent.lastIndexOf(',n.p=\"') + 6, scriptContent.lastIndexOf('\",n(n.s='));\r\n        sourceData.mainScriptWebpackEntry = parseInt(scriptContent.substring(scriptContent.lastIndexOf('\",n(n.s=') + 8,scriptContent.lastIndexOf(\")\")));\r\n        return sourceData;\r\n    }\r\n    static async getMainScriptContentAuto(webpackSource, libHelper) {\r\n        const { linkGamePage, linkReferer } = getGameInfo();\r\n        const methodsAvailable = [\r\n            new ParamGameInfoCollector(libHelper, linkGamePage, linkReferer),\r\n            // new DocumentGameInfoCollector(libHelper, linkGamePage, linkReferer),\r\n            new SourceGameInfoCollector(libHelper, linkGamePage, linkReferer)\r\n        ];\r\n        let methodResult;\r\n        let scriptInfo = null;\r\n\r\n        for(let methodId = 0; methodId < methodsAvailable.length; methodId++) {\r\n            methodResult = methodsAvailable[methodId].getGameInfo();\r\n            if(methodResult instanceof Promise) {\r\n                methodResult = await methodResult;\r\n            }\r\n            if(!methodResult || !methodResult.linkScript || methodResult.scriptLoaded) {\r\n                continue;\r\n            }\r\n            scriptInfo = methodResult;\r\n            break;\r\n        }\r\n        if(!scriptInfo) {\r\n            return;\r\n        }\r\n        const scriptData = ScriptLoader.parseMainScript(await NetworkUtils.getContent(scriptInfo.linkScript, linkReferer));\r\n        if(scriptData) {\r\n            Object.assign(scriptInfo, scriptData);\r\n        }\r\n        Object.assign(webpackSource, scriptInfo);\r\n    }\r\n};\r\n\r\nmodule.exports = {\r\n    ScriptLoader\r\n}","module.exports = require('./entry').send();\r\n\r\n","const { moduleCreate, defaultModuleCreateSignals } = require('/src/utils/module');\r\n\r\nmodule.exports = moduleCreate('tankionlineWebpack', ((moduleContext, coreContext) => {\r\n    // moduleContext.info.name = 'Tanki Online: Webpack';\r\n    // moduleContext.info.version = '1.0.0';\r\n    // moduleContext.info.versionAlpha = true;\r\n    // moduleContext.info.versionBeta = false;\r\n    \r\n    moduleContext.units.register(require('./units/webpackStorage'));\r\n}), defaultModuleCreateSignals);\r\n\r\n","const unitSignals = {\r\n    moduleInit: ((moduleContext, coreContext) => {\r\n        let libWebpackModule = coreContext.modules.require('libWebpack');\r\n        \r\n        moduleContext.webpackData = new libWebpackModule.AdvancedWebpackModuleManager();\r\n\t\tmoduleContext.webpackSource = {};\r\n    })\r\n};\r\n\r\nmodule.exports = {\r\n    unitSignals\r\n};\r\n\r\n","const localGlobalContext = (() => {\r\n    try {\r\n        return globalContext;\r\n    } catch(e) {};\r\n    return globalThis;\r\n})();\r\n\r\nconst localPackageContext = (() => {\r\n    try {\r\n        return packageContext;\r\n    } catch(e) {};\r\n    return {};\r\n})();\r\nconst localRuntimeContext = (() => {\r\n    try {\r\n        return runtimeContext;\r\n    } catch(e) {};\r\n    return {};\r\n})();\r\nconst localConnectContext = (() => {\r\n    try {\r\n        return connectContext;\r\n    } catch(e) {};\r\n    return (localRuntimeContext || localPackageContext || localGlobalContext);\r\n})();\r\nconst localDOMContext = (() => {\r\n    try {\r\n        return domContext;\r\n    } catch(e) {};\r\n    return localGlobalContext;\r\n})();\r\n\r\nconst getDebugContext = ((force) => {\r\n    try {\r\n        return debugContext;\r\n    } catch(e) {};\r\n    return (force ? localGlobalContext : {});\r\n});\r\nconst getValue = ((name) => {\r\n    if(name in localRuntimeContext) {\r\n        return localRuntimeContext[name];\r\n    }\r\n    if(name in localPackageContext) {\r\n        return localPackageContext[name];\r\n    }\r\n    if(name in localGlobalContext) {\r\n        return localGlobalContext[name];\r\n    }\r\n    if(name in globalThis) {\r\n        return globalThis[name];\r\n    }\r\n});\r\nconst getDocument = (() => {\r\n    return localDOMContext.document;\r\n});\r\nconst getInterpreterType = (() => {\r\n    if(globalThis.constructor && globalThis.constructor.name) {\r\n        if(globalThis.constructor.name.toLowerCase() == 'window') {\r\n            return 'Browser';\r\n        }\r\n    }\r\n    if(globalThis instanceof EventTarget) {\r\n        return 'Browser';\r\n    }\r\n    if(globalThis.navigator && globalThis.navigator.userAgent) {\r\n        return 'Browser';\r\n    }\r\n    if(globalThis.navigator && globalThis.navigator.cookieEnabled) {\r\n        return 'Browser';\r\n    }\r\n    if(globalThis.performance && globalThis.performance.nodeTiming) {\r\n        return 'NodeJS';\r\n    }\r\n    return 'Unknown';\r\n});\r\n\r\nmodule.exports = {\r\n    globalContext: localGlobalContext,\r\n    packageContext: localPackageContext,\r\n    runtimeContext: localRuntimeContext,\r\n    connectContext: localConnectContext,\r\n    domContext: localDOMContext,\r\n    \r\n    consoleContext: getValue('console'),\r\n\r\n    forceDebugContext: getDebugContext(true),\r\n    debugContext: getDebugContext(false),\r\n    getDocument,\r\n    getValue,\r\n    getInterpreterType\r\n};\r\n","module.exports = {\r\n    sharedCore: {\r\n        enabled: true,\r\n        coreContext: null,\r\n        templateList: []\r\n    }\r\n};\r\n\r\n","const { connectContext } = require('./context');\r\nconst { moduleListenerName } = require('/config/moduleConnection');\r\nconst { sharedCore } = require('./features');\r\n\r\nclass ListenerRegisterEvent extends Event {\r\n    status = null;\r\n    transferObject = null;\r\n    constructor(eventType) {\r\n        super(eventType)\r\n        this.status = false;\r\n        this.transferObject = null;\r\n    }\r\n};\r\nclass ListenerRegisterModuleTemplateEvent extends ListenerRegisterEvent {\r\n    moduleTemplate = null;\r\n    constructor(eventType, moduleTemplate) {\r\n        super(eventType)\r\n        this.transferObject = this.moduleTemplate = moduleTemplate;\r\n    }\r\n};\r\n\r\nconst moduleSendEvent = ((shareContext, shareKey, moduleTemplate) => {\r\n    let registerEvent = new ListenerRegisterModuleTemplateEvent(shareKey, moduleTemplate);\r\n    shareContext.dispatchEvent(registerEvent);\r\n\r\n    let registerEventFunction = ((event) => {\r\n        let registerCallback = (event.registerCallback || null);\r\n        if(!registerCallback || (typeof(registerCallback) != 'function')) {\r\n            return;\r\n        }\r\n        shareContext.removeEventListener((shareKey + 'ModuleRequest'), registerEventFunction);\r\n        registerCallback(moduleTemplate);\r\n    });\r\n    \r\n    if(!registerEvent.status) {\r\n        shareContext.addEventListener((shareKey + 'ModuleRequest'), registerEventFunction);\r\n    }\r\n});\r\nconst moduleSendContext = ((shareContext, shareKey, moduleTemplate) => {\r\n    shareContext[shareKey] = (shareContext[shareKey] || []);\r\n\r\n    if ((shareContext[shareKey]) instanceof Array) {\r\n        shareContext[shareKey].push(moduleTemplate);\r\n    } else {\r\n        shareContext[shareKey](moduleTemplate);\r\n    }\r\n});\r\n\r\nconst moduleSendDirect = ((moduleTemplate) => {\r\n    if(sharedCore.coreContext) {\r\n        sharedCore.coreContext.moduleListener.installModuleTemplate(moduleTemplate);\r\n    } else {\r\n        sharedCore.templateList.push(moduleTemplate);\r\n    }\r\n});\r\n\r\nconst moduleSend = ((shareContext, shareKey, moduleTemplate) => {\r\n    if(sharedCore.enabled) {\r\n        moduleSendDirect(moduleTemplate);\r\n    } else if(shareContext instanceof EventTarget) {\r\n        moduleSendEvent(shareContext, shareKey, moduleTemplate);\r\n    } else {\r\n        moduleSendContext(shareContext, shareKey, moduleTemplate);\r\n    }\r\n});\r\n\r\nconst moduleCreate = ((moduleId, ...args) => {\r\n    let moduleTemplate = {\r\n        id: moduleId,\r\n        constructors: args,\r\n        send: (() => (moduleSend(connectContext, moduleListenerName, moduleTemplate), this))\r\n    };\r\n    Object.defineProperty(moduleTemplate, '__dataType', {writable: false, value: 'ModuleTemplate'});\r\n    Object.defineProperty(moduleTemplate, '__isModuleTemplate', {writable: false, value: true});\r\n\r\n    return moduleTemplate;\r\n});\r\n\r\nconst defaultModuleCreateSignals = ((moduleContext, coreContext) => {\r\n    // Загрузка компонентов модуля:\r\n    // > Инициализация компонентов модуля:\r\n    moduleContext.units.signal('init', coreContext);\r\n    // > Регистрация обработчиков событий:\r\n    moduleContext.units.signal('event', coreContext);\r\n    // > Загрузка компонентов модуля:\r\n    moduleContext.units.signal('load', coreContext);\r\n    // > Загружены все основные элементы всех компонентов модуля:\r\n    moduleContext.units.signal('launch', coreContext);\r\n    // > Запуск модуля:\r\n    moduleContext.units.signal('application', coreContext);\r\n\r\n    // Упрощение доступа к вызовам модуля:\r\n    moduleContext.signals.register('init', (async (moduleContext, coreContext) => {\r\n        return await Promise.all(moduleContext.units.signal('moduleInit', coreContext));\r\n    }));\r\n    moduleContext.signals.register('event', (async (moduleContext, coreContext) => {\r\n        return await Promise.all(moduleContext.units.signal('moduleEvent', coreContext));\r\n    }));\r\n    moduleContext.signals.register('load', (async (moduleContext, coreContext) => {\r\n        return await Promise.all(moduleContext.units.signal('moduleLoad', coreContext));\r\n    }));\r\n    moduleContext.signals.register('launch', (async (moduleContext, coreContext) => {\r\n        return await Promise.all(moduleContext.units.signal('moduleLaunch', coreContext));\r\n    }));\r\n    moduleContext.signals.register('application', (async (moduleContext, coreContext) => {\r\n        return await Promise.all(moduleContext.units.signal('moduleApplication', coreContext));\r\n    }));\r\n});\r\n\r\nmodule.exports = { moduleCreate, defaultModuleCreateSignals };\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(784);\n__webpack_require__(303);\n__webpack_require__(127);\n__webpack_require__(110);\n__webpack_require__(114);\nvar __webpack_exports__ = __webpack_require__(725);\n"],"names":["module","exports","debugName","styleLoggerProject","styleLoggerModule","moduleListenerName","projectName","Module","moduleCreateCore","args","coreContext","loaded","info","versionProduction","versionDevelopment","Object","defineProperty","writable","value","map","callback","call","defaultModuleCreateSignals","name","version","versionAlpha","versionBeta","units","register","getInterpreterType","unitSignals","application","signal","destroy","applicationUnknown","logger","error","globalContext","CoreEvent","ModuleListenerStopEvent","constructor","super","cancelable","eventType","applicationBrowser","loadProc","modules","signals","signalModulesLoad","event","dispatchEvent","moduleListener","listenStop","EventTarget","document","readyState","addEventListener","consoleContext","applicationNodeJS","EventManager","GlobalEvent","Event","detail","eventName","eventInitDict","this","ModuleEvent","id","init","getValue","defaultLangMutate","i18n","Translator","load","mutate","mutateUpdate","languareData","languareCurrent","languareMutations","languare","e","language","import","content","scanState","currentData","currentLanguare","keyName","toLocaleLowerCase","keyNameSecond","assign","mutateDictionary","get","set","LoggerBrowser","ModuleImportEvent","outData","console","outStyle","consoleObject","style","propertyInfo","getOwnPropertyNames","filter","propertyName","functionName","propertyData","indexOf","formatedArgs","length","concat","slice","apply","bind","defineProperties","connectContext","sharedCore","ListenerRecvEvent","recv","recvPrevious","ListenerRecvModuleEvent","ListenerRecvModuleTemplateEvent","moduleTemplate","ListenerRecvDataEvent","data","ListenerProcessModuleEvent","ListenerModuleRequestEvent","listenerName","registerCallback","ProcessModuleImportEvent","ModuleListener","listenStart","callRecvObject","recvData","onRecvDefault","__dataType","onRecvModuleTemplateDefault","onRecvModuleDefault","onRecvDataDefault","moduleContext","constructors","Array","constructorData","constructorFunction","EventModuleListener","globalObject","listenerCallback","options","status","transferObject","preventDefault","removeEventListener","ContextModuleListener","enumerable","configurable","SharedModuleListener","templateList","installModuleTemplate","getModuleListener","enabled","installModule","signalId","signalAutoloadList","Promise","all","applicationPrev","ModuleNotFoundError","Error","moduleId","moduleManager","toString","UnitSignalManager","unitContent","push","result","unitCallback","ModuleSignalManager","signalCallbacks","signalCallback","ModuleManagerSignalManager","resultAwait","async","callModuleSignal","signalList","signalName","require","events","ModuleManager","state","moduleCreate","FunctionHook","originalFunction","runtimeThis","runtimeArgs","callOriginal","FunctionHelper","static","object","hookCallback","hookObject","domContext","LinkHelper","link","exec","linkPage","startsWith","getRoot","getBase","originalLink","execResult","search","paramName","location","vars","getSearchInURL","substring","split","i","pair","decodeURIComponent","ObjectHelper","propertyNameStart","resultOnce","resultList","FormatString","sourceString","formatValuePython","replace","match","number","formatValue","WebpackModuleManager","AdvancedWebpackModuleManager","getExports","searchData","className","pop","webpackRequireList","searchMetadataClass","searchResult","searchExports","searchClass","searchSource","searchMetadataClassRegEx","searchSourceRegEx","RegExp","searchCode","availableModules","shift","searchCodeRegEx","test","searchDataRuntime","from","searchValue","installedModules","availableModulesNext","hasOwnProperty","l","m","c","harmonyExport","export","d","getter","o","r","Symbol","toStringTag","t","mode","__esModule","ns","create","key","getDefaultExport","n","property","prototype","p","s","webpackRequire","__webpack_require__","__webpack_public_path__","publicPath","__webpack_entry__","entry","entryModule","loadEntryModule","moduleIdList","hooks","webpackData","hookName","hookInfo","eventData","notifyFlagDropped","playerMessage","defaultMessage","notifyFlagReturned","CaptureFlagComponent","BattleTeam","TeamRelation","BattleMessageType","BattleMessagesComponent","LocalizedComponent","getLocalizedKeyByBattleMessage","getLocalizedKeyByBattleMessage_0","battleMessage","getPropertyName","originalFunciton","getTypePropertyName","Companion","__proto__","pathFunctionSimpleBefore","flagObject","battleEntityObject","getTeamRelationEx","teamFirst","teamSecond","isAlly","NONE","teamCompare","ALLY","ENEMY","teamRelation","gameMode","gameMode_0","flagTeamOwner","teamType","possesedTankTeam","addBattleLogMessage_0","WHITE","addBattleLogMessage_1","baseGamePage","paramOriginalScript","paramOriginalPage","mutatePage","linkGamePage","linkCurrent","currentRegExp","mutateScript","linkScript","getGameInfo","linkReferer","getPageContentRewriteStatus","getBaseRewriteStatus","libHelper","webpackSource","moduleLoad","libTankionlineWebpack","ScriptLoader","getMainScriptContentAuto","moduleApplication","mainScriptWebpackElements","mainScriptWebpackPath","mainScriptWebpackEntry","getDocument","pageContent","firstChild","innerHTML","linkBase","getElementsByTagName","element","remove","headElement","head","headList","warn","insertElement","createElement","setAttribute","insertBefore","eval","returnValue","isOriginalModule","NetworkUtils","response","fetch","referrer","referrerPolicy","body","method","credentials","text","GameInfoCollector","getGamePage","forceGamePage","getQueryVariable","href","getGameScript","gameScript","forceGameScript","ParamGameInfoCollector","originalScript","linkAbsolute","SourceGameInfoCollector","getContent","contentQuery","scriptContent","scriptContentPosition","sourceData","lastIndexOf","parseInt","methodsAvailable","methodResult","scriptInfo","methodId","scriptLoaded","scriptData","parseMainScript","moduleInit","libWebpackModule","localGlobalContext","globalThis","localPackageContext","packageContext","localRuntimeContext","runtimeContext","localConnectContext","localDOMContext","getDebugContext","force","debugContext","forceDebugContext","toLowerCase","navigator","userAgent","cookieEnabled","performance","nodeTiming","ListenerRegisterEvent","ListenerRegisterModuleTemplateEvent","moduleSend","shareContext","shareKey","moduleSendDirect","registerEvent","registerEventFunction","moduleSendEvent","moduleSendContext","send","__webpack_module_cache__","cachedModule","undefined","__webpack_modules__","__webpack_exports__"],"sourceRoot":""}